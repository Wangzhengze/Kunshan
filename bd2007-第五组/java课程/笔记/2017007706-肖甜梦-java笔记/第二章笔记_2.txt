1.  基本类型：

                                  程序的基本功能是处理数据
                                  程序用变量来表示数据；
                                  程序中必须能使用；
                                  定义变量是指设定变量的数据类型和变量的名字，定义变量的基本语法为：

                                  数据类型    变量名；

                                  Java语言把数据类型分为基本类型和引用类型。

2、位数
              boolean  布尔类型      1位
              byte(8位)<short=char(16位)<int=float(32位)<double=long(64位)
              窄范围转换成宽范围,自动转换
              宽范围转换成窄范围,需要强制类型转换

3、 boolean类型

                                  位置	boolean类型变量取值      
                                  ------------------------------------------------------------      
                                  Java源程序                          只能是true或false
                                  class文件                            用int或byte表示boolean  0  非0
                                  虚拟机中                              用整数0来表示false,  有任意一个非零整数表示true

                                  强调，在Java源程序中不允许把整数或null赋给boolean类型的变量，这是有别于其它语言(如c语言)的地方

4、文本数据类型——char和String

                                  1)  字符编码

                                        Java语言对文本字符采用Unicode字符编码。由于计算机内存只能存取二进制数据，因此必须为各个字符进行编码。
                                        所谓字符编码，是指用一串二进制数据来表示特定的字符。常见的字符编码包括：

                                        a.  ASCII字符编码
                                              ASCII--Amecian  Standard  Code  for  Information  Interchange(美国信息交换标准代码).  主用于表达现代英语
                                              和其他西欧语言中的字符。它是现今最通用的单字节编码系统，它只用一个字节的7位，一共表示128个字符。

                                        b.  ISO-8859-1字符编码
                                              又称为Latin-1,  是国际标准化组织(ISO)为西欧语言中的字符制定的编码，用一个字节(8位)来为字符编码，与
                                              ASCII字符编码兼容。所谓兼容，是指对于相同的字符，它的ASCII字符编码和ISO-8859-1字符编码相同。

                         c. GB2312字符编码
                       它包括对简体中文字符的编码，一共收录了7445个字符(6763个汉字+682个其他字符. 它与ASCII字符编码兼容。

                    d. GBK字符编码 windows系统
                       对GB2312字符编码的扩展，收录了21886个字符(21003个字符+其它字符), 它与GB2312字符编码兼容。

                    e. Unicode字符编码：
                       由国际Unicode协会编制，收录了全世界所有语言文字中的字符，是一种跨平台的字符编码。
                       UCS(Universal Character Set)是指采用Unicode字符编码的通用字符集。
                       Unicode具有两种编码方案：
                       . 用2个字节(16位)编码，被称为UCS-2, Java语言采用;
                       . 用4个字节(32位)编码，被称为UCS-4;

                    f. UTF字符编码 unix操作系统使用
                       有些操作系统不完全支持16位或32位的Unicode字符编码，UTF(UCS Transformation Format)字符编码能够把
                       Unicode字符编码转换为操作系统支持的编码，常见的UTF字符编码包括UTF-8, UTF-7和UTF-16.

                 2) char的几种可能取值

                    Java语言采用UCS-2字符编码，字符占2个字节(1个字节8位)
                    字符a的二进制数据形式为 0000 0000 0110 0001
                         十六进制数据形式为 0x0061
                           十进制数据形式为 97

                    以下4种赋值方式是等价的：

                    char c = 'a';
                    char c = '\u0061';      //设定"a"的十六进制数据的Unicode字符编码
                    char c = 0x0061;        //设定"a"的十六进制数据的Unicode字符编码
                    char c = 97;            //设定"a"的十进制数据的Unicode字符编码

                 3) 转义字符

                    Java编程人员在给字符变量赋值时，通常直接从键盘输入特定的字符，而不会使用Unicode字符编码，因为很难记住各
                    种字符的Unicode字符编码值。

                    对于有些特殊字符，比如单引号，如不知道它的Unicode字符编码，直接从键盘输入编译错误：

                    char c = ''';           //编码出错

                    为了解决这个问题，可采用转义字符来表示单引号和其他特殊字符： 

                    char c = '\'';
                    char c = '\\';

                    转义字符以反斜杠开头，常用转义字符：

                    \n           换行符，将光标定位到下一行的开头；
                    \t           垂直制表符，将光标移到下一个制表符的位置；
                    \\           反斜杠字符
                    \'           单引号字符
 
4）类型转换
   char—>int  直接转换
   e.g
      char a = ‘a’ int i = a   此时i的值就是a字母对应的是十进制的值
     但是 如果String—>int 不能直接转换  需要使用Integer.parseInt(String)方法进行转换
     即使使用方法转换成功,如果String本来对应的值就不是数字类型 ,转换过去也不是数字类型
   e.g
     String s = “123”  int ii = Integer.parse(s)  ii时整数
     String s = “name” int ii = Integer.parse(s) ii此时不是数字类型返回false

5、 整数类型
                    byte, short, int和long都是整数类型，并且都是有符号整数。与有符号整数对应的是无符号整数，两者的区别在于把二进制数转换为十进制整数的方式不一样。
                    有符号整数把二进制数的首位作为符号数，当首位是0时，对应十进制的正整数，当首位是1时，对应十进制的负整数。对于一个字节的二进制数, 它对应的十进制数的取值范围是-128 - 127


6、浮点类型

                    浮点类型表示有小数部分的数字。Java中有两种浮点类型：

                    . float: 占4个字节，共32位，称为单精度浮点数;
                    . double: 占8个字节，共64位，称为双精度浮点数；
双精度比单精度表示的位数大精确的位数多,简单地说, float表示的小数点位数少,double能表示的小数点位数多!
在默认情况下，小数及采用十进制科学计数法表示的数字都是double类型，可以把它直接赋值给double类型变量。
默认情况下,如果直接构建带有小数的数字,表示的是double类型
float接受需要进行强制类型转换.

7、 变量的申明和赋值
final public static int MAX_ROW = 100;
final修饰变量都是不可改变的称之为常量
static修饰变量一开始就被加载到内存,不依赖当前类,称之为静态变量
同时final和static修饰的变量称之为静态常量
                  程序的基本功能是处理数据
                  程序用变量来表示数据；
                  程序中必须先定义变量才能使用；
                  定义变量是指设定变量的数据类型和变量的名字，定义变量的基本语法为：

                  数据类型  变量名；

                  Java语言要求变量遵循先定义，再初始化，然后使用的规则。变量的初始化是指自从变量定义以后，首次给它赋初始
                  值的过程。

8、推荐命名规则

                  1) 类名以大写字母开头；
                  2) 接口名以大写字母开头；
                  3) 方法名以小写字母开头；
                  4) 变量名以小写字母开头；
                  5) 常量名全部大写，多个单词以"_"连接；
9、面向对象的开发方法把软件系统看成各种对象的集合，对象就是最小的子系统，一组相关的对象能够组合成更复杂的
     子系统。面向对象的开发方法将软件系统看成各种对象的集合，接近人的自然思维方式。

                  对象是对问题领域中事件的抽象。对象具有以下特性：

                  1) 万物皆为对象。问题领域中的实体和概念都可以抽象为对象。例如学生，成绩单、教师、课和教室。
                  2) 每个对象都是惟一的。正如世界上不存在一模一样的叶子。
                  3) 对象具有属性和行为。
	   4) 对象具有状态。状态是指某个瞬间对象的各个属性的取值。对象的某些行为会改变对象自身的状态，即属性的取值。
	   5) 每个对象都是某个类的实例。小张和小王都属于学生类、中国和美国都属于国家类、中文和英文都属于语言类。
                     类是具有相同属性和行为的对象的集合。

                     同一个类的所有实例都有相同属性，但属性取值不一,事实上相同，但是它们的状态不一定相同。例如小张和小王都属
                     于学生类，都有姓名、性别、年龄、身高和体重这些属性，但是他们的属性取值不同。

                     同一个类的所有实例都有相同行为，意味着它们具有一些相同的功能。

10、 变量可分为成员变量,局部变量
    成员变量：在类中声明，它的作用域是整个类；声明周期整个类
    可以被类里面的所有方法应用
    成员可以不初始化,本身有默认值
    成员变量位于堆空间
    默认值:int:0   boolean:false   double:0.0  String:null

局部变量：局部必须初始化.jvm不会默认初始化 。在一个方法的内部或方法的一个代码块的内部声明。
 final和static修饰变量值,所有对象在常量池构建时先不构建,先查看当前池是否有对应值.如果有直接指向
如果没有先创建后指向
对于基础类型的变量和常量：变量和引用存储在栈中，常量存储在常量池中,
 创建的对象位于堆区间